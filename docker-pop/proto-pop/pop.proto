syntax = "proto3";

package pop;

import "empty.proto";

// Service definition.
service PoP {
  rpc Containers(Filter) returns (ContainerList);

  // Login logs an user in and sets up a session.
  // The returned token should be set into the metadata 
  // of the gRPC session with key "token" to authenticate your client.
  rpc Login(Credentials) returns (Token) {}

  // Logout invalids the current token.
  rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty) {} 
}

message Container {
    string id = 1;
    repeated string names = 2;
    string image_id = 3;
    string command = 4;
    int64 created = 5;
    string status = 6;
    string extended_status = 7;
    map<string, Endpoint> endpoints = 8;
}

message ContainerList {
  repeated Container list = 1;
}

// Credentials represents the login credentials for a given user.
message Credentials {
  string username = 1;
  string password = 2;
}

message Endpoint {
  string net_id = 1;
  string endpoint_id = 2;
  IpConfig ipv4 = 3;
  IpConfig ipv6 = 4;
  string mac = 5;
}

message Filter {
  string id = 1; 
}

message Image {

}

message IpConfig {
  string address = 1;
  string gateway = 2;
  int64  prefix  = 3; 
}

// Token is a token generated by the server after a successful login.
// This token should be set as metadata, to authenticate every other 
message Token {
  string value = 1;
}


